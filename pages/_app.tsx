// _app.tsx
import { Global, css } from "@emotion/react";
import { RecoilRoot, useSetRecoilState } from "recoil";
import Layout from "../src/components/commons/layout";
import "../styles/globals.css";
import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect } from "react";
import { accessTokenState } from "../src/commons/stores";
import {
  registerAccessTokenSetter,
  setAccessToken,
} from "../src/commons/libraries/token";
import API from "../src/commons/apis/api";
import TokenInitializer from "../src/commons/libraries/TokenInitializer";
import LIcon from "../public/images/L.png";
import RIcon from "../public/images/R.png";
import GroundImage from "../public/images/ground-without-home.png";
import HomeImage from "../public/images/home.png";
import LineImage from "../public/images/line.png";
import HomeBaseMask from "../public/images/home-base-white-1.png";
import DiamondImage from "../public/images/diamond.png";
import ResetImage from "../public/images/reset.png";

function MyApp({ Component, pageProps, isMobileView }) {
  const router = useRouter();
  const isResultPage = router.pathname === "/result";
  console.log("분기 합침 테스트");

  /* --------- Service Worker 등록 --------- */
  useEffect(() => {
    if ("serviceWorker" in navigator) {
      const onLoad = () =>
        navigator.serviceWorker.register("/sw.js").catch(console.error); // 등록 실패 시 콘솔 확인
      window.addEventListener("load", onLoad);
      return () => window.removeEventListener("load", onLoad);
    }
  }, []);

  /* ---------------------------------------- */

  useEffect(() => {
    const setVh = () => {
      const vh = window.innerHeight * 0.01;
      document.documentElement.style.setProperty("--vh", `${vh}px`);
    };
    setVh();
    window.addEventListener("resize", setVh);
    return () => window.removeEventListener("resize", setVh);
  }, []);

  const pretendardStyles = css`
    /* Thin (100) */
    @font-face {
      font-family: "Pretendard";
      src: url("/fonts/Pretendard-Thin.otf") format("opentype");
      font-weight: 100;
      font-style: normal;
      font-display: swap;
    }

    /* ExtraLight (200) */
    @font-face {
      font-family: "Pretendard";
      src: url("/fonts/Pretendard-ExtraLight.otf") format("opentype");
      font-weight: 200;
      font-style: normal;
      font-display: swap;
    }

    /* Light (300) */
    @font-face {
      font-family: "Pretendard";
      src: url("/fonts/Pretendard-Light.otf") format("opentype");
      font-weight: 300;
      font-style: normal;
      font-display: swap;
    }

    /* Regular (400) */
    @font-face {
      font-family: "Pretendard";
      src: url("/fonts/Pretendard-Regular.otf") format("opentype");
      font-weight: 400;
      font-style: normal;
      font-display: swap;
    }

    /* Medium (500) */
    @font-face {
      font-family: "Pretendard";
      src: url("/fonts/Pretendard-Medium.otf") format("opentype");
      font-weight: 500;
      font-style: normal;
      font-display: swap;
    }

    /* SemiBold (600) */
    @font-face {
      font-family: "Pretendard";
      src: url("/fonts/Pretendard-SemiBold.otf") format("opentype");
      font-weight: 600;
      font-style: normal;
      font-display: swap;
    }

    /* Bold (700) */
    @font-face {
      font-family: "Pretendard";
      src: url("/fonts/Pretendard-Bold.otf") format("opentype");
      font-weight: 700;
      font-style: normal;
      font-display: swap;
    }

    /* ExtraBold (800) */
    @font-face {
      font-family: "Pretendard";
      src: url("/fonts/Pretendard-ExtraBold.otf") format("opentype");
      font-weight: 800;
      font-style: normal;
      font-display: swap;
    }

    /* Black (900) */
    @font-face {
      font-family: "Pretendard";
      src: url("/fonts/Pretendard-Black.otf") format("opentype");
      font-weight: 900;
      font-style: normal;
      font-display: swap;
    }

    /* 전역 기본 폰트 지정 */
    html,
    body,
    #__next {
      font-family: "Pretendard", sans-serif;
    }
  `;

  return (
    <>
      <Head>
        <title>SNU Baseball</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/icons/ball.png" />
        <link rel="preload" as="image" href={LIcon.src} />
        <link rel="preload" as="image" href={RIcon.src} />
        <link rel="preload" as="image" href={GroundImage.src} />
        <link rel="preload" as="image" href={HomeImage.src} />
        <link rel="preload" as="image" href={LineImage.src} />
        <link rel="preload" as="image" href={HomeBaseMask.src} />
        <link rel="preload" as="image" href={DiamondImage.src} />
        <link rel="preload" as="image" href={ResetImage.src} />
        <link
          rel="preload"
          href="/images/home-base-white-1.png"
          as="image"
          type="image/png"
        />
      </Head>
      <Global styles={pretendardStyles} />
      <RecoilRoot>
        <TokenInitializer />
        <Layout>
          {/* 페이지 컴포넌트에도 필요하다면 mobileOnly 전달 */}
          <Component {...pageProps} />
        </Layout>
      </RecoilRoot>
    </>
  );
}

export default MyApp;
